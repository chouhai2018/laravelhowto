ubuntu 监控利器atop
Atop是用于Linux的ASCII全屏性能监视器，它能够报告所有进程的活动（即使进程在该时间间隔内已完成），每日记录系统和进程的活动以进行长期分析，并通过以下方式突出显示过载的系统资源：使用颜色等。它定期显示与CPU，内存，交换，磁盘（包括LVM）和网络层有关的系统级活动，对于每个进程（和线程），例如，显示CPU利用率，内存增长，磁盘利用率，优先级，用户名，状态和退出代码。

信息-键“ s”
此屏幕显示有关每个进程的主线程的特定调度信息，例如调度策略，nice值，优先级，实时优先级以及cpu编号（当前或最后使用）和状态。
此外，它还显示了此进程中有多少个线程处于“正在运行”（cpu繁忙或在运行队列中等待），“可中断睡眠”或“不可中断睡眠”状态。可以通过累加这三个值（列TRUN，TSLPI和TSLPU）来确定线程总数。

一些细节： 进程ID为30549的进程“ chrome”总共运行4个线程。这些线程之一是“正在运行”，而三个则是可中断的睡眠。正在运行的线程似乎是该进程的主线程，因为主线程（列S）的状态为'R'。
进程ID为4680的进程“ firefox”总共运行8个线程，其中一个正在“运行”（而不是主线程）。

内存消耗-键'm'
此屏幕显示每个进程的与内存相关的特定信息，例如总虚拟和常驻大小（列VSIZE和RSIZE）以及最后一个间隔内的虚拟和常驻增长（列VGROW和RGROW）。内存百分比（列MEM）显示此过程的常驻内存占用，因为这在系统开始交换时很重要。

一些细节： 在带有PAG标签的行中，计数器“ swin”（交换）和“ swout”（交换）表明该系统遭受内存过载。在逻辑卷“ vg00-lvswap”的标签为LVM的行中，“读”和“写”计数器与“ swin”和“ swout”计数器完全匹配。对于底层磁盘“ sda”上的沉重负载，此逻辑卷也是最负责任的。
在流程级别上，可以看到很多负面的常驻增长（RGROW列），因为流程通过交换松动了其常驻页面。似乎进程ID为31048的进程“ lekker”由于内存泄漏而大量增长。当前，其常驻大小为1.5 GiB（总内存为3.8 GiB）。

磁盘利用率-键“ d”
标有LVM（逻辑卷）和DSK（底层物理磁盘）的行显示了系统级别的磁盘活动。
在进程级别，磁盘活动显示为通过读取（列RDDSK）和写入（列WRDSK）传输的数据量。通常，写入的数据在物理上写入磁盘之前，先存储在内存中的页面缓存中。当数据写入页面缓存但在物理写入磁盘之前被销毁时，该数量被报告为已取消（列WCANCL）。

磁盘利用率—键“ d”（更大的窗口）
当将此较宽的屏幕截图与上一个屏幕截图进行比较时，系统会添加列以进行系统级统计，例如每个读写请求传输的KiB数量，每秒读写的总吞吐量以及服务器中平均请求数量。磁盘驱动程序的请求队列。

一些详细信息： 带有标签DSK的行显示磁盘sda在上一个间隔中的繁忙程度为47％，发出3096个读取请求和40个写入请求。因此，大多数磁盘利用率是由正在读取的进程引起的。
读取了最多数据的进程似乎是“ bash”，进程ID为21091。该进程转移了150MB（占所有 磁盘转移的97％）。由于其他进程没有传输太多数据，因此“ bash”似乎使磁盘在20秒的间隔中占了47％的繁忙，这是不对的……而且事实并非如此！进程ID为31085的进程“查找”已发出大多数磁盘传输，但在此间隔内已完成。在这种情况下顶上从退出进程的进程记帐记录中获取其信息，但是不幸的是，磁盘转移的数量没有在那里注册。.
另一个复杂的因素是，每当内核将子进程的已记帐 磁盘转移数字添加到其父进程时，子进程退出。因此，“ bash”可能没有发出任何磁盘传输（实际上，“ find”已读取了被视为“ bash”的150MiB数据）。

可变信息-键“ v”
此屏幕显示有关进程的其他信息，例如凭据（真实uid和真实gid），父进程ID，开始日期和开始时间等。


变量信息-键“ v”（更大的窗口）
当将该更宽的屏幕截图与上一个屏幕截图进行比较时， 现在将显示uid和gid的所有样式，并显示在该间隔内完成的进程的确切结束数据和结束时间。

命令行-键“ c”
此屏幕显示进程的命令行。如果将窗口扩大，则会显示更多命令行参数。


每个程序累计-键“ p”
该屏幕在最右边的列中显示哪些程序处于活动状态（或在最后一个时间间隔内处于活动状态），在最左边的列中显示多少个进程（信息）。中间的列显示了累积的cpu消耗，累积的虚拟和本地内存消耗（请注意，共享部分是每个进程的总帐，因此这太高了），从磁盘到磁盘的累积传输数据和（仅在以下情况下）所述netatop模块是激活的）的累积网络传输。

每个用户累计-键“ u”
该屏幕在最右边的列中显示哪些用户处于活动状态（或在上一个时间间隔内处于活动状态），在最左边的列中显示每个用户运行/运行了多少个进程。中间的列显示了累积的cpu消耗，累积的虚拟和本地内存消耗（请注意，共享部分是每个进程的总帐，因此这太高了），从磁盘到磁盘的累积传输数据和（仅在以下情况下）所述netatop模块是激活的）的累积网络传输。

网络利用率-键“ n”（与netatop模块一起使用）
该屏幕显示了加载内核模块netatop时每个进程的网络活动 。使用此模块，网络传输将计入相关的进程和线程。显示了TCP和UDP的接收和发送数量，即使netatopd守护程序处于活动状态时，也显示了已完成的进程。如果窗口扩大了，还会显示每次传输的平均大小（如本例所示）。请注意，接口级别的利用率可以很容易地与每个进程使用的带宽相关：接口p5p1的“ si”显示输入为28 Mbps，其中“ ssh”消耗了23 Mbps（“ BANDWI”），而“ ssh”消耗了近5 Mbps。吸引”，而接口p5p1的“ so”显示为5571 Kbps的输出，其中“ ssh”消耗了588 Kbps（“ BANDWO”）

atop安装
sudo apt install atop

netatop下载
https://www.atoptool.nl/download/netatop-3.1.tar.gz
安装
tar -zxf netatop-3.1.tar.gz
sudo apt install zlib1g-dev
make
make install
systemctl start netatop
systemctl enable netatop

执行
sudo atop